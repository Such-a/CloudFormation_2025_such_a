AWSTemplateFormatVersion: "2010-09-09"

Description: >
  CloudFormation template to create an EC2 instance, an IAM Role, and an S3 bucket for storing its logs.

Parameters:
  AmiId:
    Description: AMI ID to launch the EC2 instance (Ubuntu).
    Type: AWS::EC2::Image::Id

  InstanceType:
    Description: EC2 instance type (e.g., t2.micro, t3.micro, etc.)
    Type: String
    Default: t2.micro

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access.
    Type: AWS::EC2::KeyPair::KeyName
    Default: dediko123

  LogBucketNamePrefix:
    Description: Prefix for the log S3 bucket name.
    Type: String
    Default: myapp-logs

  UniqueSuffix:
    Description: A unique identifier to append to the bucket name (e.g., initials or random ID).
    Type: String
    Default: gs24

  AppEnv:
    Description: Application environment (dev, staging, production)
    Type: String
    AllowedValues:
      - dev
      - staging
      - production
    Default: dev

Resources:
  # --- S3 Bucket for Logs ---
  WebServerLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${LogBucketNamePrefix}-my-logs-${UniqueSuffix}"
      AccessControl: Private
      Tags:
        - Key: Environment
          Value: !Ref AppEnv
        - Key: Purpose
          Value: Store EC2 Logs


  # --- IAM Role for EC2 Instance ---
  WebServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: S3WriteAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${WebServerLogBucket}/*"

  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WebServerRole

  # --- EC2 Instance ---
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref WebServerInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      Tags:
        - Key: Name
          Value: !Sub "web-server-${AppEnv}"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update -y
          sudo apt install -y awscli
          echo "Setting environment variables..."
          echo "export LOG_BUCKET=${WebServerLogBucket}" >> /etc/profile.d/logvars.sh
          echo "export APP_ENV=${AppEnv}" >> /etc/profile.d/logvars.sh
          source /etc/profile.d/logvars.sh
          echo "System variables set: LOG_BUCKET=${WebServerLogBucket}, APP_ENV=${AppEnv}" > /var/log/setup_env.log
          sleep 30
          aws s3 cp /var/log/setup_env.log s3://${WebServerLogBucket}/setup_env.log --region ${AWS::Region}

Outputs:
  EC2InstanceId:
    Description: The ID of the created EC2 instance
    Value: !Ref WebServerInstance

  EC2PublicIP:
    Description: The public IP of the EC2 instance
    Value: !GetAtt WebServerInstance.PublicIp

  LogBucketName:
    Description: The name of the S3 bucket where logs are stored
    Value: !Ref WebServerLogBucket
